/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  OnEvent,
  PromiseOrValue,
  TypedEvent,
  TypedEventFilter,
  TypedListener,
} from "../common";

export interface AccountFactoryInterface extends utils.Interface {
  functions: {
    "computeCreate2Address(bytes32,address,address,address)": FunctionFragment;
    "deployProxyAccount(bytes32,address,address,address)": FunctionFragment;
    "proxyBytecodeHash()": FunctionFragment;
    "proxyContructorData(address,address,address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "computeCreate2Address"
      | "deployProxyAccount"
      | "proxyBytecodeHash"
      | "proxyContructorData"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "computeCreate2Address",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "deployProxyAccount",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "proxyBytecodeHash",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "proxyContructorData",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "computeCreate2Address",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deployProxyAccount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proxyBytecodeHash",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proxyContructorData",
    data: BytesLike
  ): Result;

  events: {};
}

export interface AccountFactory extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: AccountFactoryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    computeCreate2Address(
      _salt: PromiseOrValue<BytesLike>,
      _implementation: PromiseOrValue<string>,
      _owner: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    deployProxyAccount(
      _salt: PromiseOrValue<BytesLike>,
      _implementation: PromiseOrValue<string>,
      _owner: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    proxyBytecodeHash(overrides?: CallOverrides): Promise<[string]>;

    proxyContructorData(
      _implementation: PromiseOrValue<string>,
      _owner: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  computeCreate2Address(
    _salt: PromiseOrValue<BytesLike>,
    _implementation: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _guardian: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  deployProxyAccount(
    _salt: PromiseOrValue<BytesLike>,
    _implementation: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _guardian: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  proxyBytecodeHash(overrides?: CallOverrides): Promise<string>;

  proxyContructorData(
    _implementation: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _guardian: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    computeCreate2Address(
      _salt: PromiseOrValue<BytesLike>,
      _implementation: PromiseOrValue<string>,
      _owner: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    deployProxyAccount(
      _salt: PromiseOrValue<BytesLike>,
      _implementation: PromiseOrValue<string>,
      _owner: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    proxyBytecodeHash(overrides?: CallOverrides): Promise<string>;

    proxyContructorData(
      _implementation: PromiseOrValue<string>,
      _owner: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    computeCreate2Address(
      _salt: PromiseOrValue<BytesLike>,
      _implementation: PromiseOrValue<string>,
      _owner: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    deployProxyAccount(
      _salt: PromiseOrValue<BytesLike>,
      _implementation: PromiseOrValue<string>,
      _owner: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    proxyBytecodeHash(overrides?: CallOverrides): Promise<BigNumber>;

    proxyContructorData(
      _implementation: PromiseOrValue<string>,
      _owner: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    computeCreate2Address(
      _salt: PromiseOrValue<BytesLike>,
      _implementation: PromiseOrValue<string>,
      _owner: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    deployProxyAccount(
      _salt: PromiseOrValue<BytesLike>,
      _implementation: PromiseOrValue<string>,
      _owner: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    proxyBytecodeHash(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    proxyContructorData(
      _implementation: PromiseOrValue<string>,
      _owner: PromiseOrValue<string>,
      _guardian: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}

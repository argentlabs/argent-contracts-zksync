/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type { PromiseOrValue } from "../../common";
import type { Owned, OwnedInterface } from "../../contracts/Owned";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x0002000000000002000100000001035500000060011002700000003c0010019d000000010120018f000000000110004c000000080000c13d00e9001f0000040f00e900090000040f0000008001000039000000400200003900000000001204350000000001000416000000000110004c0000001d0000c13d000000000100001900e900e70000040f0000003d011001970000000002000411000000000121019f000000000200001900e900e50000040f000000200100003900000100020000390000000000120439000001200100003900000000000104390000003e01000041000000ea0001042e0000000001000019000000eb0001043000060000000000020000000001000411000300000001001d0000000001000410000080020210008c0000003a0000613d0000000302000029000080010220008c0000003a0000613d0000003f02000041000000000020043900000004020000390000000000120439000000400100004100008002020000390000000003000415000000060330008a00000020033000c900e900cc0000040f000000ff01000039000000050110024f000000000110004c000000ab0000613d000000060100035f000000000101043b000000000110004c000000ad0000613d0000008005000039000000400600003900000000005604350000000001000031000000030210008c000000a30000a13d0000000102000367000000000302043b000000e003300270000000410430009c0000008c0000c13d0000000003000416000000000330004c000000a50000c13d000000040110008a00000043030000410000001f0410008c000000000400001900000000040320190000004301100197000000000510004c0000000003008019000000430110009c00000000010400190000000001036019000000000110004c000000a70000613d000200000006001d0000000401200370000000000101043b0000004402100197000400000002001d000000450110009c000000a90000813d000000000100001900e900e70000040f000100000001001d00000044011001970000000302000029000000000112004b00000000010000190000000101006039000300000001001d00e900b80000040f000000030100002900e900b80000040f0000000401000029000000000110004c0000007c0000c13d0000000201000029000000000101043300000044021000390000004803000041000000000032043500000024021000390000001803000039000000000032043500000049020000410000000000210435000000040210003900000020030000390000000000320435000000400110021000000047011001970000004a011001c7000000eb0001043000000001010000290000003d011001970000000402000029000000000121019f000000000200001900e900e50000040f0000000201000029000000000101043300000046020000410000000203000039000000000023041f0000000402000029000000000002041e00000040011002100000004701100197000000ea0001042e000000420230009c000000a30000c13d000400000005001d0000000002000416000000000220004c000000af0000c13d000000040110008a000000010200008a0000004303000041000000000221004b000000000200001900000000020320190000004301100197000000430410009c00000000030080190000004301100167000000430110009c00000000010200190000000001036019000000000110004c000000b10000c13d0000000001000019000000eb000104300000000001000019000000eb000104300000000001000019000000eb000104300000000001000019000000eb000104300000000001000019000000eb000104300000000001000019000000eb000104300000000001000019000000ea0001042e0000000001000019000000eb00010430000000000100001900e900e70000040f0000004401100197000000040200002900000000001204350000004b01000041000000ea0001042e000000000110004c000000bb0000613d000000000001042d0000004001000039000000000101043300000044021000390000004c03000041000000000032043500000024021000390000000d03000039000000000032043500000049020000410000000000210435000000040210003900000020030000390000000000320435000000400110021000000047011001970000004a011001c7000000eb000104300002000000000002000200000003001d0000002003300039000100000003001d000000db002104230000000203000029000000200230011a000000000201035500000043010000410000000102000029000000200220011a00000000021201bd00000000010300190000000200000005000000000001042d0000000203000029000000200230011a00000000020103550000004d010000410000000102000029000000200220011a000000000212018d00000000010300190000000200000005000000000001042d000000000012041b000000000001042d000000000101041a000000000001042d000000e900000432000000ea0001042e000000eb00010430000000000000000100000000000000010000000000000001000000000000000100000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b83020002000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000000000000000000000a6f9dae1000000000000000000000000000000000000000000000000000000008da5cb5b8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000000000000000000010000000000000000000000000000000000000000a2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf360000000000000000000000000000000000000000ffffffff000000000000000041646472657373206d757374206e6f74206265206e756c6c000000000000000008c379a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000200000008000000000000000004d757374206265206f776e6572000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000";

type OwnedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Owned__factory extends ContractFactory {
  constructor(...args: OwnedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Owned> {
    return super.deploy(overrides || {}) as Promise<Owned>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Owned {
    return super.attach(address) as Owned;
  }
  override connect(signer: Signer): Owned__factory {
    return super.connect(signer) as Owned__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnedInterface {
    return new utils.Interface(_abi) as OwnedInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Owned {
    return new Contract(address, _abi, signerOrProvider) as Owned;
  }
}
